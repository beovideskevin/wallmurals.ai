<!DOCTYPE html>
<html lang="es-ES">
<head>
    <% include partials/head.ejs %>

    <script src="https://cdn.jsdelivr.net/npm/ag-charts-community@11.1.0/dist/umd/ag-charts-community.min.js"></script>

    <style>
    </style>
</head>
<body>
    <% include partials/navigation.ejs %>

    <!-- (weekly, monthly, yearly dropdown) -->
    <section class="relative pt-32 pb-20" id="visitsSection"> 
        <div class="container">
            <h2 class="text-3xl md:text-4xl/tight font-semibold mt-4 mb-8 text-center">Visits</h2>
            <div id="visitsContainer" class="shadow-2xl rounded-xl bg-white p-6 py-20 pt-20"></div>
        </div>
    </section>

    <section class="relative pt-10 pb-20" id="engagementSection"> 
        <div class="container">
            <h2 class="text-3xl md:text-4xl/tight font-semibold mt-4 mb-8 text-center">Engagement</h2>
            <div id="engagementContainer" class="shadow-2xl rounded-xl bg-white p-6 py-20 pt-20"></div>
        </div>
    </section>

    <section class="relative pt-10 pb-20" id="interactionsSection"> 
        <div class="container">
            <h2 class="text-3xl md:text-4xl/tight font-semibold mt-4 mb-8 text-center">Shared</h2>
            <div id="interactionsContainer" class="shadow-2xl rounded-xl bg-white p-6 py-20 pt-20"></div>
        </div>
    </section>

    <% include partials/footer.ejs %>

    <script>
        document.addEventListener('DOMContentLoaded', async function() {
            try {
                const response = await fetch("/metrics", {cache: "no-store"});
                if (!response.ok || response.status != 200) {
                    throw new Error(`Response status: ${response.status}`);
                }
                const content = await response.json();
                console.log(content);

                // Init the visits chart
                const visitsOptions = { 
                    container: document.getElementById("visitsContainer"),
                    data: [],
                    series: []
                };

                for (let i = 0; i < content.visits.length; i++) {
                    visitsOptions.series.push(
                        { type: 'line', xKey: 'month', yKey: content.visits[i].id, yName: content.visits[i].location },
                    );
                    content.visits[i].data.forEach(function (dataPoint) {
                        let data = {
                            month: dataPoint.month
                        };
                        data[`${content.visits[i].id}`] = dataPoint.count;
                        visitsOptions.data.push(data);
                    });
                }

                const visitsChart = agCharts.AgCharts.create(visitsOptions);

                // Init engagement chart
                const engagementOptions = { 
                    container: document.getElementById("engagementContainer"),
                    data: [],
                    series: []
                };

                for (let i = 0; i < content.engagement.length; i++) {
                    engagementOptions.series.push(
                        { type: 'bar', xKey: 'month', yKey: content.engagement[i].id, yName: content.engagement[i].location },
                    );
                    content.engagement[i].data.forEach(function (dataPoint) {
                        let data = {
                            month: dataPoint.month
                        };
                        data[`${content.engagement[i].id}`] = dataPoint.count;
                        engagementOptions.data.push(data);
                    });
                }

                const engagementChart = agCharts.AgCharts.create(engagementOptions);

                // Init interactions chart
                const interactionsOptions = { 
                    container: document.getElementById("interactionsContainer"),
                    data: [],
                    series: []
                }

                for (let i = 0; i < content.interactions.length; i++) {
                    interactionsOptions.series.push(
                        { type: 'bar', xKey: 'month', yKey: content.interactions[i].id, yName: content.interactions[i].location },
                    );
                    content.interactions[i].data.forEach(function (dataPoint) {
                        let data = {
                            month: dataPoint.month
                        };
                        data[`${content.interactions[i].id}`] = dataPoint.count;
                        interactionsOptions.data.push(data);
                    });
                }

                const interactionsChart = agCharts.AgCharts.create(interactionsOptions);
            }
            catch (error) {
                console.error("Error:", error);
            }
        });
    </script>
</body>
</html>